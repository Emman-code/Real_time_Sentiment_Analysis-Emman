# -*- coding: utf-8 -*-
"""Real_Time_sentiment_analyzer_DragonBoosters.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RY5OANSCe9hVti3F-ZcM8e19-Lt3H8jF

**Project Title: Real-Time Social Media Sentiment Analyzer **

Domain: Machine Learning

Technology Used: Python, VADER Sentiment Analysis

Dataset: Sentiment140

Submitted By: Team DragonBoosters:

BharathiNesan, Jose, Aravinth, Emmanuel Joshua                                  
(Students of SNSCT 1st year AI&Ml)

Date: 15/03/2025
"""

import re
import nltk
import pandas as pd
from nltk.sentiment import SentimentIntensityAnalyzer
import matplotlib.pyplot as plt
import seaborn as sns

nltk.download('vader_lexicon')

sia = SentimentIntensityAnalyzer()

def clean_text(text):
    text = text.lower()  # Convert to lowercase
    text = re.sub(r'http\S+|www\S+', '', text)  # Remove URLs
    text = re.sub(r'@[A-Za-z0-9_]+', '', text)  # Remove @mentions
    text = re.sub(r'#[A-Za-z0-9_]+', '', text)  # Remove hashtags
    text = re.sub(r'[^a-zA-Z0-9\s]', '', text)  # Remove special characters
    text = re.sub(r'\s+', ' ', text).strip()  # Remove extra spaces
    return text

def analyze_sentiment(comment):
    score = sia.polarity_scores(comment)["compound"]
    if score >= 0.05:
        return "Positive 😊"
    elif score <= -0.05:
        return "Negative 😡"
    else:
        return "Neutral 😐"

df = pd.read_csv("/content/drive/MyDrive/DRAGNON_Boosters/training.1600000.processed.noemoticon.csv", encoding='latin-1', header=None)
df.columns = ["target", "id", "date", "flag", "user", "text"]

df["cleaned_text"] = df["text"].apply(clean_text)


df["predicted_sentiment"] = df["cleaned_text"].apply(analyze_sentiment)

print(df[["cleaned_text", "predicted_sentiment"]].head())

while True:
    user_input = input("\nEnter a comment (or type 'exit' to stop): ")
    if user_input.lower() == "exit":
        print("Exiting Sentiment Analyzer...👋")
        break
    cleaned_input = clean_text(user_input)
    sentiment = analyze_sentiment(cleaned_input)
    print(f"Predicted Sentiment: {sentiment}")